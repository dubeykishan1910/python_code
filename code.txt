Step 1: Update Models
Update your AttendanceRecord model in attendance_app/models.py to include fields for start time and stop time:



# attendance_app/models.py
from django.db import models

class AttendanceRecord(models.Model):
    date = models.DateField()
    start_time = models.TimeField(null=True, blank=True)
    stop_time = models.TimeField(null=True, blank=True)

    def __str__(self):
        return f"{self.date} - Start: {self.start_time}, Stop: {self.stop_time}"



Step 2: Update Forms
Update the AttendanceForm in attendance_app/forms.py to include fields for start time and stop time:


# attendance_app/forms.py
from django import forms
from .models import AttendanceRecord

class AttendanceForm(forms.ModelForm):
    class Meta:
        model = AttendanceRecord
        fields = ['date', 'start_time', 'stop_time']





Step 3: Update Views
Update the take_attendance view in attendance_app/views.py to handle the dynamic behavior:



# attendance_app/views.py
from django.shortcuts import render, redirect
from .models import AttendanceRecord
from .forms import AttendanceForm

def take_attendance(request):
    form = AttendanceForm()

    return render(request, 'attendance_app/take_attendance.html', {'form': form})




Step 4: Create Templates
Update the take_attendance.html template in attendance_app/templates/attendance_app/ to include JavaScript for dynamic button handling:



<!-- attendance_app/templates/attendance_app/take_attendance.html -->
{% extends 'base.html' %}

{% block content %}
  <h2>Take Attendance</h2>
  <form method="post" action="{% url 'take_attendance' %}">
    {% csrf_token %}
    {{ form.as_p }}
    <button type="button" id="startButton">Start</button>
    <button type="button" id="stopButton" style="display: none;">Stop</button>
  </form>

  <script>
    let startButton = document.getElementById('startButton');
    let stopButton = document.getElementById('stopButton');

    startButton.addEventListener('click', function() {
      let now = new Date();
      let hours = now.getHours().toString().padStart(2, '0');
      let minutes = now.getMinutes().toString().padStart(2, '0');
      let currentTime = hours + ':' + minutes;

      document.getElementById('id_start_time').value = currentTime;

      startButton.style.display = 'none';
      stopButton.style.display = 'inline-block';
    });

    stopButton.addEventListener('click', function() {
      let now = new Date();
      let hours = now.getHours().toString().padStart(2, '0');
      let minutes = now.getMinutes().toString().padStart(2, '0');
      let currentTime = hours + ':' + minutes;

      document.getElementById('id_stop_time').value = currentTime;

      startButton.style.display = 'inline-block';
      stopButton.style.display = 'none';
    });
  </script>
{% endblock %}






Step 5: Configure URLs
Update the urls.py files accordingly.

Step 6: Run Migrations and Run the Server
Run the following commands:




python manage.py makemigrations
python manage.py migrate
python manage.py runserver